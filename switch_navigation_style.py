#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π API –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 switch_navigation_style.py [simple|animated]
"""

import os
import sys
import glob
import re

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DASHBOARD_DIR = "/Users/d.dubenetskiy/Documents/tg_project/dashboard"

def switch_to_style(style):
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å"""
    if style not in ['simple', 'animated']:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∏–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: simple –∏–ª–∏ animated")
        return False
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π CSS —Ñ–∞–π–ª
    target_css = "navigation-api-simple.css" if style == 'simple' else "navigation-api.css"
    old_css_1 = "navigation-api.css" if style == 'simple' else "navigation-api-simple.css"
    
    print(f"üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ —Å—Ç–∏–ª—å: {style}")
    print(f"üìÅ –¶–µ–ª–µ–≤–æ–π CSS —Ñ–∞–π–ª: {target_css}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    target_path = os.path.join(DASHBOARD_DIR, target_css)
    if not os.path.exists(target_path):
        print(f"‚ùå –§–∞–π–ª {target_css} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
    pattern = os.path.join(DASHBOARD_DIR, "*.html")
    html_files = glob.glob(pattern)
    
    # –ò—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
    exclude_files = {
        'navbar-component.html', 'navigation-component.html',
        'test-api.html', 'test-user.html', 'debug-user-id.html'
    }
    
    files_to_update = []
    for file_path in html_files:
        filename = os.path.basename(file_path)
        if filename not in exclude_files:
            files_to_update.append(file_path)
    
    updated_count = 0
    
    for file_path in files_to_update:
        filename = os.path.basename(file_path)
        
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å
            if target_css in content:
                print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º {filename} (—É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç {target_css})")
                continue
            
            # –ó–∞–º–µ–Ω—è–µ–º CSS —Ñ–∞–π–ª
            original_content = content
            
            # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π CSS —Ñ–∞–π–ª –Ω–∞ –Ω–æ–≤—ã–π
            content = re.sub(
                r'<link rel="stylesheet" href="navigation-api(-simple)?\.css">',
                f'<link rel="stylesheet" href="{target_css}">',
                content
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ–∏–∑–æ—à–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if content != original_content:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                with open(file_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {filename}")
                updated_count += 1
            else:
                print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω CSS –≤ {filename}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {filename}: {e}")
    
    print(f"\nüéâ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {updated_count}")
    print(f"üé® –ê–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å: {style}")
    print(f"üìÅ CSS —Ñ–∞–π–ª: {target_css}")
    
    if style == 'simple':
        print(f"\nüìù –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å—Ç–∏–ª—è:")
        print(f"  ‚Ä¢ –ë–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ")
        print(f"  ‚Ä¢ –ë–µ–∑ shimmer —ç—Ñ—Ñ–µ–∫—Ç–æ–≤")
        print(f"  ‚Ä¢ –ë—ã—Å—Ç—Ä–æ–µ fade-in –ø–æ—è–≤–ª–µ–Ω–∏–µ") 
        print(f"  ‚Ä¢ –°—Ç–∞—Ç–∏—á–Ω–∞—è skeleton –∑–∞–≥—Ä—É–∑–∫–∞")
    else:
        print(f"\nüìù –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è:")
        print(f"  ‚Ä¢ –ü–ª–∞–≤–Ω–æ–µ fade-in –ø–æ—è–≤–ª–µ–Ω–∏–µ")
        print(f"  ‚Ä¢ –ú—è–≥–∫–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ skeleton")
        print(f"  ‚Ä¢ –ë–æ–ª–µ–µ –ø–ª–∞–≤–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã")
    
    print(f"\nüîÑ –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
    print(f"  1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã dashboard")
    print(f"  2. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+F5)")
    
    return True

def detect_current_style():
    """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å—Ç–∏–ª—å"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    test_files = ['main.html', 'tasks.html', 'meetings.html']
    
    for filename in test_files:
        file_path = os.path.join(DASHBOARD_DIR, filename)
        if os.path.exists(file_path):
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                if 'navigation-api-simple.css' in content:
                    return 'simple'
                elif 'navigation-api.css' in content:
                    return 'animated'
                    
            except Exception:
                continue
    
    return 'unknown'

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé® Navigation Style Switcher")
    print("=" * 40)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å
    current_style = detect_current_style()
    if current_style != 'unknown':
        print(f"üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å: {current_style}")
    else:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) < 2:
        print(f"\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print(f"  python3 {sys.argv[0]} simple     # –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∏–ª—å –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π")
        print(f"  python3 {sys.argv[0]} animated   # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å")
        
        print(f"\nüéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏:")
        print(f"  üìÑ simple    - –ë–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π, –±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞")
        print(f"  ‚ú® animated  - –° –ø–ª–∞–≤–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏")
        
        return
    
    target_style = sys.argv[1].lower()
    
    if current_style == target_style:
        print(f"\n‚úÖ –°—Ç–∏–ª—å '{target_style}' —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω!")
        return
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
    success = switch_to_style(target_style)
    
    if success:
        print(f"\nüß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ:")
        print(f"  üåê http://localhost:8000/dashboard/main.html")
        print(f"  üîç http://localhost:8000/dashboard/api-navigation-diagnostic.html")

if __name__ == "__main__":
    main()