#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ user.id –≤ HTML —Ñ–∞–π–ª–∞—Ö dashboard
–ó–∞–º–µ–Ω—è–µ—Ç user.id –Ω–∞ Auth.getCurrentUserId() –≤–æ –≤—Å–µ—Ö HTML —Ñ–∞–π–ª–∞—Ö
"""

import os
import re
import glob

def fix_user_id_references():
    dashboard_path = "/Users/d.dubenetskiy/Documents/tg_project/dashboard"
    html_files = glob.glob(os.path.join(dashboard_path, "*.html"))
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
    patterns = [
        # API –∑–∞–ø—Ä–æ—Å—ã —Å user.id –≤ URL
        (r'user_id=\$\{user\.id\}', r'user_id=${Auth.getCurrentUserId()}'),
        
        # JSON body —Å user_id: user.id
        (r'user_id:\s*user\.id', r'user_id: Auth.getCurrentUserId()'),
        
        # –§—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º user.id
        (r'([a-zA-Z_][a-zA-Z0-9_]*)\(user\.id\)', r'\1(Auth.getCurrentUserId())'),
        
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ user_id: user.id –≤ –æ–±—ä–µ–∫—Ç–∞—Ö
        (r'"user_id":\s*user\.id', r'"user_id": Auth.getCurrentUserId()'),
    ]
    
    changed_files = []
    total_replacements = 0
    
    for file_path in html_files:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã
        filename = os.path.basename(file_path)
        if any(skip in filename for skip in ['test-', 'ui-kit', 'navigation-component']):
            continue
            
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        file_replacements = 0
        
        for pattern, replacement in patterns:
            matches = re.findall(pattern, content)
            if matches:
                print(f"  üîç –ù–∞–π–¥–µ–Ω–æ {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞: {pattern}")
                content = re.sub(pattern, replacement, content)
                file_replacements += len(matches)
        
        if content != original_content:
            print(f"üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {filename}")
            print(f"   –ó–∞–º–µ–Ω: {file_replacements}")
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            backup_path = file_path + '.backup'
            with open(backup_path, 'w', encoding='utf-8') as f:
                f.write(original_content)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            changed_files.append(filename)
            total_replacements += file_replacements
            print()
    
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –§–∞–π–ª–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–æ: {len(changed_files)}")
    print(f"   –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: {total_replacements}")
    
    if changed_files:
        print(f"\nüìÅ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        for filename in changed_files:
            print(f"   - {filename}")
        
        print(f"\nüíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .backup")
        print(f"üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    else:
        print("‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ user.id...")
    print("üéØ –ó–∞–º–µ–Ω—è–µ–º user.id –Ω–∞ Auth.getCurrentUserId()")
    print()
    
    fix_user_id_references()