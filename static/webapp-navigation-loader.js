// WebApp Navigation Loader - –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Telegram WebApp
(function() {
    'use strict';
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const CONFIG = {
        API_URL: '/api/navigation',
        CACHE_KEY: 'webapp_navigation_cache',
        CACHE_DURATION: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
        FALLBACK_TIMEOUT: 3000, // 3 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É API
    };
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
    let isNavigationLoaded = false;
    let isLoading = false;
    let navigationCache = null;
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ –∫–µ—à–∞
     */
    function getCachedNavigation() {
        try {
            const cached = localStorage.getItem(CONFIG.CACHE_KEY);
            if (!cached) return null;
            
            const data = JSON.parse(cached);
            const now = Date.now();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ –∫–µ—à–∞
            if (now - data.timestamp > CONFIG.CACHE_DURATION) {
                localStorage.removeItem(CONFIG.CACHE_KEY);
                return null;
            }
            
            console.log('üì¶ WebApp –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –∫–µ—à–∞');
            return data.navigation;
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–µ—à–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
            localStorage.removeItem(CONFIG.CACHE_KEY);
            return null;
        }
    }
    
    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –∫–µ—à
     */
    function cacheNavigation(navigation) {
        try {
            const cacheData = {
                navigation: navigation,
                timestamp: Date.now(),
                version: '1.0'
            };
            
            localStorage.setItem(CONFIG.CACHE_KEY, JSON.stringify(cacheData));
            console.log('üíæ WebApp –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫–µ—à');
            
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ—à–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å API
     */
    async function fetchNavigationFromAPI() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º user_id –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
            const userId = getUserId() || null;
            
            const params = new URLSearchParams();
            if (userId) params.append('user_id', userId);
            params.append('category', 'main'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é main –¥–ª—è WebApp
            
            const response = await fetch(`${CONFIG.API_URL}?${params}`);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const data = await response.json();
            
            if (!data.navigation || !Array.isArray(data.navigation)) {
                throw new Error('Invalid navigation data format');
            }
            
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ WebApp –ø—É–Ω–∫—Ç—ã (–±–µ–∑ /dashboard/ –≤ URL)
            const webappNavigation = data.navigation.filter(item => 
                !item.url.startsWith('/dashboard/') && 
                !item.url.includes('dashboard')
            );
            
            console.log('üåê WebApp –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å API:', webappNavigation.length, '–ø—É–Ω–∫—Ç–æ–≤');
            
            // –ö–µ—à–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            cacheNavigation(webappNavigation);
            
            return webappNavigation;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å API:', error);
            throw error;
        }
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ fallback –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    function getFallbackNavigation() {
        return [
            {
                id: 'home',
                title: '–ì–ª–∞–≤–Ω–∞—è',
                url: 'index.html',
                icon: 'üè†',
                category: 'main',
                sort_order: 1
            },
            {
                id: 'tasks',
                title: '–ó–∞–¥–∞—á–∏',
                url: 'tasks.html',
                icon: 'üìã',
                category: 'main',
                sort_order: 2
            },
            {
                id: 'events',
                title: '–°–æ–±—ã—Ç–∏—è',
                url: 'events.html',
                icon: 'üìÖ',
                category: 'main',
                sort_order: 3
            },
            {
                id: 'shopping',
                title: '–ü–æ–∫—É–ø–∫–∏',
                url: 'shopping.html',
                icon: 'üõí',
                category: 'main',
                sort_order: 4
            },
            {
                id: 'projects',
                title: '–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã',
                url: 'project_select.html',
                icon: 'üìÅ',
                category: 'projects',
                sort_order: 5
            },
            {
                id: 'project_create',
                title: '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç',
                url: 'project_create.html',
                icon: '‚ûï',
                category: 'projects',
                sort_order: 6
            },
            {
                id: 'task_add',
                title: '–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞',
                url: 'task_add.html',
                icon: 'üìù',
                category: 'create',
                sort_order: 7
            },
            {
                id: 'event_create',
                title: '–ù–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ',
                url: 'event_create.html',
                icon: 'üìÖ',
                category: 'create',
                sort_order: 8
            },
            {
                id: 'shopping_add',
                title: '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É',
                url: 'shopping.html',
                icon: 'üõí',
                category: 'create',
                sort_order: 9
            },
            {
                id: 'settings',
                title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                url: 'settings.html',
                icon: '‚öôÔ∏è',
                category: 'settings',
                sort_order: 10
            },
            {
                id: 'timezone',
                title: '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
                url: 'timezone-settings.html',
                icon: 'üåç',
                category: 'settings',
                sort_order: 11
            }
        ];
    }
    
    /**
     * –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
     */
    function groupNavigationByCategory(navigationItems) {
        const groups = {
            main: { title: 'üìã –û—Å–Ω–æ–≤–Ω–æ–µ', items: [] },
            projects: { title: 'üìÅ –ü—Ä–æ–µ–∫—Ç—ã', items: [] },
            create: { title: '‚ûï –°–æ–∑–¥–∞—Ç—å', items: [] },
            settings: { title: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', items: [] }
        };
        
        navigationItems.forEach(item => {
            const category = item.category || 'main';
            if (groups[category]) {
                groups[category].items.push(item);
            } else {
                groups.main.items.push(item);
            }
        });
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ
        Object.keys(groups).forEach(key => {
            groups[key].items.sort((a, b) => (a.sort_order || 0) - (b.sort_order || 0));
        });
        
        return groups;
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ HTML –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é
     */
    function createNavigationMenuHTML(navigationItems) {
        const groups = groupNavigationByCategory(navigationItems);
        const currentPage = window.location.pathname.split('/').pop() || 'index.html';
        
        let sectionsHTML = '';
        
        Object.keys(groups).forEach(categoryKey => {
            const group = groups[categoryKey];
            if (group.items.length === 0) return;
            
            sectionsHTML += `
                <div class="nav-section">
                    <h4 class="nav-section-title">${group.title}</h4>
                    <div class="nav-links">
            `;
            
            group.items.forEach(item => {
                const isActive = currentPage === item.url.split('/').pop() ? 'active' : '';
                const badge = item.badge_text ? `<span class="nav-badge">${item.badge_text}</span>` : '';
                
                sectionsHTML += `
                    <a href="${item.url}" class="nav-item ${isActive}">
                        <span class="nav-item-icon">${item.icon}</span>
                        <span class="nav-item-text">${item.title}</span>
                        ${badge}
                    </a>
                `;
            });
            
            sectionsHTML += `
                    </div>
                </div>
            `;
        });
        
        return sectionsHTML;
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é
     */
    function updateNavigationMenu(navigationItems) {
        const menuContainer = document.querySelector('.navigation-sections');
        if (!menuContainer) {
            console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const navigationHTML = createNavigationMenuHTML(navigationItems);
        menuContainer.innerHTML = navigationHTML;
        
        console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ –∏–∑ API');
    }
    
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∫—Ä–æ–º–µ –≥–ª–∞–≤–Ω–æ–π
     */
    function addBackButton() {
        const currentPage = window.location.pathname.split('/').pop() || 'index.html';
        
        // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if (currentPage === 'index.html') {
            return;
        }
        
        const pageHeader = document.querySelector('.unified-page-header');
        if (!pageHeader) {
            console.warn('‚ö†Ô∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞
        if (pageHeader.querySelector('.back-button')) {
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        const backButton = document.createElement('button');
        backButton.className = 'back-button';
        backButton.onclick = () => {
            // –ü—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –∏—Å—Ç–æ—Ä–∏–∏
            if (window.history.length > 1) {
                window.history.back();
            } else {
                // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                window.location.href = 'index.html';
            }
        };
        backButton.innerHTML = `
            <span class="back-button-icon">‚Üê</span>
            <span class="back-button-text">–ù–∞–∑–∞–¥</span>
        `;
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–∞—á–∞–ª–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        pageHeader.insertBefore(backButton, pageHeader.firstChild);
        
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    }
    
    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    async function loadWebAppNavigation() {
        if (isNavigationLoaded || isLoading) {
            return;
        }
        
        isLoading = true;
        
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∫–µ—à–∞
            let navigationItems = getCachedNavigation();
            
            if (!navigationItems) {
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å API
                try {
                    navigationItems = await Promise.race([
                        fetchNavigationFromAPI(),
                        new Promise((_, reject) => 
                            setTimeout(() => reject(new Error('Timeout')), CONFIG.FALLBACK_TIMEOUT)
                        )
                    ]);
                } catch (error) {
                    console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –Ω–∞–≤–∏–≥–∞—Ü–∏—é:', error.message);
                    navigationItems = getFallbackNavigation();
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
            updateNavigationMenu(navigationItems);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            addBackButton();
            
            isNavigationLoaded = true;
            console.log('‚úÖ WebApp –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
            
            // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
            const fallbackItems = getFallbackNavigation();
            updateNavigationMenu(fallbackItems);
            addBackButton();
            
        } finally {
            isLoading = false;
        }
    }
    
    /**
     * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è user_id (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö)
     */
    function getUserId() {
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
        if (window.Telegram?.WebApp?.initDataUnsafe?.user?.id) {
            return window.Telegram.WebApp.initDataUnsafe.user.id;
        }
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ localStorage
        try {
            const userData = JSON.parse(localStorage.getItem('telegram_user') || '{}');
            return userData.id || null;
        } catch {
            return null;
        }
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
    window.loadWebAppNavigation = loadWebAppNavigation;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', loadWebAppNavigation);
    } else {
        loadWebAppNavigation();
    }
    
})();