#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü dashboard –Ω–∞ –Ω–æ–≤—É—é API Navigation System
–î–∞—Ç–∞: 31 —è–Ω–≤–∞—Ä—è 2025
"""

import os
import re
import glob
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DASHBOARD_DIR = "/Users/d.dubenetskiy/Documents/tg_project/dashboard"
BACKUP_DIR = "/Users/d.dubenetskiy/Documents/tg_project/dashboard/backup_old_nav"

# –§–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
EXCLUDE_FILES = {
    'navbar-component.html',
    'navigation-component.html', 
    'main-api-test.html',  # –£–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω
    'main-static-test.html',
    'navigation-static.html',
    'navbar-demo.html',
    'ui-kit.html',  # UI Kit –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    'test-api.html',
    'test-user.html', 
    'test-user-sync.html',
    'test-meetings-api.html',
    'test-navigation.html',
    'debug-user-id.html'
}

def create_backup():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    if not os.path.exists(BACKUP_DIR):
        os.makedirs(BACKUP_DIR)
        print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –±—ç–∫–∞–ø–æ–≤: {BACKUP_DIR}")

def get_html_files():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    pattern = os.path.join(DASHBOARD_DIR, "*.html")
    all_files = glob.glob(pattern)
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∞–π–ª—ã
    files_to_update = []
    for file_path in all_files:
        filename = os.path.basename(file_path)
        if filename not in EXCLUDE_FILES:
            files_to_update.append(file_path)
    
    return files_to_update

def backup_file(file_path):
    """–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ñ–∞–π–ª–∞"""
    filename = os.path.basename(file_path)
    backup_path = os.path.join(BACKUP_DIR, f"{filename}.backup")
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    with open(backup_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"üíæ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: {filename}")

def update_html_file(file_path):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML —Ñ–∞–π–ª–∞ –Ω–∞ –Ω–æ–≤—É—é API –Ω–∞–≤–∏–≥–∞—Ü–∏—é"""
    filename = os.path.basename(file_path)
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    backup_file(file_path)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ <head>
    # 1. –ó–∞–º–µ–Ω—è–µ–º preload –¥–∏—Ä–µ–∫—Ç–∏–≤—ã
    old_preloads = [
        r'<link rel="preload" href="navigation-component\.html" as="fetch" crossorigin>',
        r'<link rel="preload" href="navigation\.css" as="style">',
        r'<link rel="preload" href="navigation-skeleton\.css" as="style">'
    ]
    
    new_preload = '    <link rel="preload" href="/api/navigation?category=main" as="fetch" crossorigin>'
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ preload –¥–∏—Ä–µ–∫—Ç–∏–≤—ã
    for old_preload in old_preloads:
        content = re.sub(old_preload, '', content, flags=re.IGNORECASE)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π preload –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ preload –∏–ª–∏ –ø–æ—Å–ª–µ title
    if '<link rel="preload"' in content:
        content = re.sub(
            r'(\s*<link rel="preload"[^>]*>\s*)', 
            lambda m: m.group(1) + '\n' + new_preload + '\n    ',
            content, count=1
        )
    else:
        content = re.sub(
            r'(\s*<title>[^<]*</title>\s*)',
            lambda m: m.group(1) + '\n    ' + new_preload + '\n    ',
            content
        )
    
    # 2. –ó–∞–º–µ–Ω—è–µ–º CSS —Ñ–∞–π–ª—ã
    css_replacements = [
        (r'<link rel="stylesheet" href="navigation\.css">', ''),
        (r'<link rel="stylesheet" href="navigation-skeleton\.css">', ''),
    ]
    
    for old_css, new_css in css_replacements:
        content = re.sub(old_css, new_css, content, flags=re.IGNORECASE)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ CSS —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
    dashboard_css_pattern = r'(\s*<link rel="stylesheet" href="dashboard-styles\.css">\s*)'
    replacement = r'\1    <link rel="stylesheet" href="navigation-api.css">\n'
    content = re.sub(dashboard_css_pattern, replacement, content)
    
    # 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã –≤ <body>
    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    old_scripts = [
        r'<script src="navigation-loader\.js"></script>',
        r'<script src="main-navigation\.js"></script>',
    ]
    
    for old_script in old_scripts:
        content = re.sub(old_script, '', content, flags=re.IGNORECASE)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç API –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    # –ò—â–µ–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ auth.js –∏–ª–∏ –≤ –Ω–∞—á–∞–ª–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
    auth_script_pattern = r'(\s*<script src="auth\.js"></script>\s*)'
    new_script = '    <script src="navigation-api-loader.js"></script>\n'
    
    if re.search(auth_script_pattern, content):
        content = re.sub(auth_script_pattern, r'\1' + new_script, content)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç auth.js, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ body
        body_pattern = r'(\s*<body[^>]*>\s*)'
        content = re.sub(body_pattern, r'\1' + new_script, content)
    
    # 4. –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–æ —Å—Ç–∞—Ä—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    old_comments = [
        r'<!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ -->\s*',
        r'<!-- Preload –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ -->\s*',
    ]
    
    for comment in old_comments:
        content = re.sub(comment, '', content, flags=re.IGNORECASE)
    
    # 5. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–æ –Ω–æ–≤—É—é API –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    body_pattern = r'(\s*<body[^>]*>\s*)'
    api_comment = '    <!-- API –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ JavaScript -->\n    \n'
    content = re.sub(body_pattern, r'\1' + api_comment, content)
    
    # 6. –û—á–∏—â–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)  # –£–±–∏—Ä–∞–µ–º —Ç—Ä–æ–π–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã
    content = re.sub(r'^\s*\n', '', content, flags=re.MULTILINE)  # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {filename}")

def update_ui_kit_separately():
    """–û—Ç–¥–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI Kit —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π"""
    ui_kit_path = os.path.join(DASHBOARD_DIR, "ui-kit.html")
    if not os.path.exists(ui_kit_path):
        return
    
    print("üé® –û–±–Ω–æ–≤–ª—è–µ–º UI Kit...")
    
    with open(ui_kit_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    backup_file(ui_kit_path)
    
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è UI Kit
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ CSS –∏ JS —Ñ–∞–π–ª—ã, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π CSS –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
    if 'navigation-api.css' not in content:
        dashboard_css_pattern = r'(\s*<link rel="stylesheet" href="ui-components\.css">\s*)'
        replacement = r'\1    <link rel="stylesheet" href="navigation-api.css">\n'
        content = re.sub(dashboard_css_pattern, replacement, content)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π JS –≤ –∫–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–æ–≤
    if 'navigation-api-loader.js' not in content:
        body_end_pattern = r'(\s*</body>)'
        new_script = '    <script src="navigation-api-loader.js"></script>\n'
        content = re.sub(body_end_pattern, new_script + r'\1', content)
    
    with open(ui_kit_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ UI Kit –æ–±–Ω–æ–≤–ª–µ–Ω (–≥–∏–±—Ä–∏–¥–Ω—ã–π —Ä–µ–∂–∏–º)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü dashboard –Ω–∞ API Navigation System")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø—ã
    create_backup()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    files_to_update = get_html_files()
    
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(files_to_update)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    for file_path in files_to_update:
        print(f"  - {os.path.basename(file_path)}")
    
    print(f"\nüö´ –ò—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    for excluded in sorted(EXCLUDE_FILES):
        print(f"  - {excluded}")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\n‚ö†Ô∏è  –í—Å–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    print(f"üíæ –ë—ç–∫–∞–ø—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {BACKUP_DIR}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    print(f"\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã...")
    updated_count = 0
    
    for file_path in files_to_update:
        try:
            update_html_file(file_path)
            updated_count += 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {os.path.basename(file_path)}: {e}")
    
    # –û—Ç–¥–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º UI Kit
    try:
        update_ui_kit_separately()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI Kit: {e}")
    
    print(f"\nüéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count} —Ñ–∞–π–ª–æ–≤")
    print(f"üé® UI Kit –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –≥–∏–±—Ä–∏–¥–Ω–æ–º —Ä–µ–∂–∏–º–µ")
    print(f"üíæ –ë—ç–∫–∞–ø—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤: {BACKUP_DIR}")
    
    print(f"\nüìù –ß—Ç–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ:")
    print(f"  ‚úÖ –ó–∞–º–µ–Ω–µ–Ω—ã preload –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –Ω–∞ API")
    print(f"  ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω—ã navigation-api.css")
    print(f"  ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω navigation-api-loader.js")
    print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ navigation-*.js —Ñ–∞–π–ª—ã")
    print(f"  ‚úÖ –û—á–∏—â–µ–Ω—ã –ª–∏—à–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
    
    print(f"\nüß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print(f"  üåê http://localhost:8000/dashboard/main.html")
    print(f"  üåê http://localhost:8000/dashboard/tasks.html")
    print(f"  üåê http://localhost:8000/dashboard/meetings.html")

if __name__ == "__main__":
    main()