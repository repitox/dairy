#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä NetAngels
"""

import subprocess
import sys
import os

def run_ssh_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ SSH —Å–µ—Ä–≤–µ—Ä–µ"""
    ssh_command = f'ssh c107597@h60.netangels.ru "cd dialist.ru/app && {command}"'
    print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º: {command}")
    
    try:
        result = subprocess.run(ssh_command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {result.stdout.strip()}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def deploy_shopping_fix():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è"""
    print("üöÄ –î–µ–ø–ª–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫ –Ω–∞ NetAngels...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...")
    if not run_ssh_command("pwd"):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π...")
    run_ssh_command("python3 server_migrate.py status")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã purchases
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã purchases...")
    check_command = '''python3 -c "
from db import get_conn
try:
    with get_conn() as conn:
        with conn.cursor() as cur:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã
            cur.execute(\\\"SELECT column_name FROM information_schema.columns WHERE table_name = 'purchases' ORDER BY ordinal_position;\\\")
            columns = [row[0] for row in cur.fetchall()]
            print(f'–ü–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã purchases: {columns}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            cur.execute(\\\"SELECT EXISTS (SELECT 1 FROM pg_sequences WHERE sequencename = 'purchases_id_seq');\\\")
            seq_exists = cur.fetchone()[0]
            print(f'–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å purchases_id_seq: {\\\"–µ—Å—Ç—å\\\" if seq_exists else \\\"–Ω–µ—Ç\\\"}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            cur.execute('SELECT COUNT(*) FROM purchases;')
            count = cur.fetchone()[0]
            print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {count}')
            
except Exception as e:
    print(f'–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}')
"'''
    run_ssh_command(check_command)
    
    # 4. –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\n4Ô∏è‚É£ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
    if run_ssh_command("python3 server_migrate.py migrate"):
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤—Ä—É—á–Ω—É—é
        print("\nüîß –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã purchases –≤—Ä—É—á–Ω—É—é...")
        fix_command = '''python3 -c "
from db import get_conn
try:
    with get_conn() as conn:
        with conn.cursor() as cur:
            print('–ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É purchases...')
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            cur.execute(\\\"CREATE SEQUENCE IF NOT EXISTS purchases_id_seq;\\\")
            cur.execute(\\\"SELECT setval('purchases_id_seq', COALESCE((SELECT MAX(id) FROM purchases), 0) + 1, false);\\\")
            cur.execute(\\\"ALTER TABLE purchases ALTER COLUMN id SET DEFAULT nextval('purchases_id_seq');\\\")
            cur.execute(\\\"ALTER SEQUENCE purchases_id_seq OWNED BY purchases.id;\\\")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
            cur.execute(\\\"ALTER TABLE purchases ADD COLUMN IF NOT EXISTS shopping_list_id INTEGER;\\\")
            cur.execute(\\\"ALTER TABLE purchases ADD COLUMN IF NOT EXISTS url TEXT;\\\")
            cur.execute(\\\"ALTER TABLE purchases ADD COLUMN IF NOT EXISTS comment TEXT;\\\")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
            cur.execute(\\\"CREATE INDEX IF NOT EXISTS idx_purchases_shopping_list_id ON purchases(shopping_list_id);\\\")
            
            conn.commit()
            print('‚úÖ –¢–∞–±–ª–∏—Ü–∞ purchases –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞')
            
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {e}')
    import traceback
    traceback.print_exc()
"'''
        run_ssh_command(fix_command)
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    run_ssh_command("python3 server_migrate.py status")
    
    # 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API...")
    test_command = '''python3 -c "
import requests
import json

try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫
    response = requests.get('http://localhost:8000/api/shopping-lists?user_id=2')
    if response.status_code == 200:
        lists = response.json()
        print(f'‚úÖ API —Å–ø–∏—Å–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç: –Ω–∞–π–¥–µ–Ω–æ {len(lists)} —Å–ø–∏—Å–∫–æ–≤')
        
        if lists:
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä
            list_id = lists[0]['id']
            data = {
                'user_id': 2,
                'name': '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä',
                'quantity': 1,
                'shopping_list_id': list_id,
                'comment': '–¢–µ—Å—Ç –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏'
            }
            
            response = requests.post('http://localhost:8000/api/shopping', json=data)
            if response.status_code == 200:
                result = response.json()
                print(f'‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: ID {result.get(\\\"id\\\")}')
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: {response.status_code} - {response.text}')
        else:
            print('‚ö†Ô∏è –ù–µ—Ç —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
    else:
        print(f'‚ùå API —Å–ø–∏—Å–∫–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}')
        
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}')
"'''
    run_ssh_command(test_command)
    
    print("\nüéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
    return True

if __name__ == "__main__":
    deploy_shopping_fix()