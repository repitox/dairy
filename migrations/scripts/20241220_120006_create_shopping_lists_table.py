"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shopping_lists –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã purchases
"""

def up(cursor):
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫
    print("üìã –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É shopping_lists...")
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS shopping_lists (
            id SERIAL PRIMARY KEY,
            name VARCHAR(255) NOT NULL,
            project_id INTEGER NOT NULL,
            user_id BIGINT NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
            FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
        );
    """)
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    cursor.execute("CREATE INDEX IF NOT EXISTS idx_shopping_lists_user_id ON shopping_lists(user_id);")
    cursor.execute("CREATE INDEX IF NOT EXISTS idx_shopping_lists_project_id ON shopping_lists(project_id);")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–æ–ª–±–µ—Ü shopping_list_id –≤ —Ç–∞–±–ª–∏—Ü–µ purchases
    cursor.execute("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = 'purchases' AND column_name = 'shopping_list_id';
    """)
    column_exists = cursor.fetchone()
    
    if not column_exists:
        print("üîó –î–æ–±–∞–≤–ª—è–µ–º —Å–≤—è–∑—å —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü—É purchases...")
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è —Å–≤—è–∑–∏ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–∫—É–ø–æ–∫
        cursor.execute("""
            ALTER TABLE purchases 
            ADD COLUMN shopping_list_id INTEGER,
            ADD COLUMN url TEXT,
            ADD COLUMN comment TEXT;
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
        cursor.execute("""
            ALTER TABLE purchases 
            ADD CONSTRAINT fk_purchases_shopping_list 
            FOREIGN KEY (shopping_list_id) REFERENCES shopping_lists(id) ON DELETE SET NULL;
        """)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
        cursor.execute("CREATE INDEX IF NOT EXISTS idx_purchases_shopping_list_id ON purchases(shopping_list_id);")
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∫—É–ø–æ–∫
    print("üìù –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    cursor.execute("""
        INSERT INTO shopping_lists (name, project_id, user_id, created_at)
        SELECT DISTINCT 
            '–û–±—â–∏–π —Å–ø–∏—Å–æ–∫' as name,
            COALESCE(p.project_id, (
                SELECT id FROM projects 
                WHERE owner_id = p.user_id 
                ORDER BY created_at ASC 
                LIMIT 1
            )) as project_id,
            p.user_id,
            CURRENT_TIMESTAMP
        FROM purchases p
        WHERE NOT EXISTS (
            SELECT 1 FROM shopping_lists sl 
            WHERE sl.user_id = p.user_id
        )
        AND p.user_id IS NOT NULL;
    """)
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–∫—É–ø–∫–∏ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    cursor.execute("""
        UPDATE purchases 
        SET shopping_list_id = (
            SELECT sl.id 
            FROM shopping_lists sl 
            WHERE sl.user_id = purchases.user_id 
            AND sl.name = '–û–±—â–∏–π —Å–ø–∏—Å–æ–∫'
            LIMIT 1
        )
        WHERE shopping_list_id IS NULL;
    """)
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shopping_lists —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")


def down(cursor):
    """–û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"""
    
    # –£–¥–∞–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á –∏ —Å—Ç–æ–ª–±—Ü—ã –∏–∑ purchases
    cursor.execute("ALTER TABLE purchases DROP CONSTRAINT IF EXISTS fk_purchases_shopping_list;")
    cursor.execute("ALTER TABLE purchases DROP COLUMN IF EXISTS shopping_list_id;")
    cursor.execute("ALTER TABLE purchases DROP COLUMN IF EXISTS url;")
    cursor.execute("ALTER TABLE purchases DROP COLUMN IF EXISTS comment;")
    
    # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫
    cursor.execute("DROP TABLE IF EXISTS shopping_lists CASCADE;")
    
    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è shopping_lists –æ—Ç–∫–∞—á–µ–Ω–∞")