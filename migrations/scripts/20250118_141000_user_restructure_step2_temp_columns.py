"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤–æ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
–≠—Ç–∞–ø 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
"""

def upgrade(cursor):
    print("üîÑ –≠—Ç–∞–ø 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤–æ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã")
    
    # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –∏ –∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    tables_to_update = [
        ('events', 'user_id'),
        ('notes', 'user_id'),
        ('project_members', 'user_id'),
        ('projects', 'owner_id'),
        ('purchases', 'user_id'),
        ('reminder_logs', 'user_id'),
        ('shopping', 'user_id'),
        ('shopping_lists', 'user_id'),
        ('tasks', 'user_id'),
        ('user_settings', 'user_id')
    ]
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ –ø–æ–ª–µ –µ—Å—Ç—å –≤ users –¥–ª—è —Å–≤—è–∑–∏
    cursor.execute("SELECT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='user_id')")
    user_id_exists = bool(cursor.fetchone()[0])
    cursor.execute("SELECT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='users' AND column_name='telegram_id')")
    telegram_id_exists = bool(cursor.fetchone()[0])
    join_field = 'user_id' if user_id_exists else ('telegram_id' if telegram_id_exists else None)

    for table_name, column_name in tables_to_update:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
        cursor.execute(f"ALTER TABLE {table_name} ADD COLUMN IF NOT EXISTS temp_user_id INTEGER")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ (–≤–æ–∑–º–æ–∂–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–π –ø—Ä–æ–¥)
        cursor.execute(
            "SELECT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name=%s AND column_name=%s)",
            (table_name, column_name),
        )
        has_link_col = bool(cursor.fetchone()[0])

        if join_field and has_link_col:
            # –ó–∞–ø–æ–ª–Ω—è–µ–º temp_user_id
            cursor.execute(
                f"""
                UPDATE {table_name} t
                SET temp_user_id = u.id
                FROM users u
                WHERE t.{column_name} = u.{join_field} AND t.temp_user_id IS NULL
                """
            )
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ {table_name}")
    
    print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤–æ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã")

def downgrade(cursor):
    print("üîÑ –û—Ç–∫–∞—Ç: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü")
    
    tables_to_update = [
        'events', 'notes', 'project_members', 'projects', 'purchases',
        'reminder_logs', 'shopping', 'shopping_lists', 'tasks', 'user_settings'
    ]
    
    for table_name in tables_to_update:
        cursor.execute(f"ALTER TABLE {table_name} DROP COLUMN IF EXISTS temp_user_id")
        print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ {table_name}")
    
    print("‚úÖ –í—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ —É–¥–∞–ª–µ–Ω—ã")

# –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å MigrationManager

def up(cursor):
    return upgrade(cursor)


def down(cursor):
    return downgrade(cursor)