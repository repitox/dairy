#!/usr/bin/env python3
"""
–ü–û–õ–ù–ê–Ø –ú–ò–ì–†–ê–¶–ò–Ø –†–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î!
‚ö†Ô∏è  –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!
"""

import sys
import os
import subprocess
from datetime import datetime

def print_banner():
    """–í—ã–≤–æ–¥ –±–∞–Ω–Ω–µ—Ä–∞ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("=" * 80)
    print("üöÄ –ü–û–õ–ù–ê–Ø –ú–ò–ì–†–ê–¶–ò–Ø –†–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 80)
    print("üìÖ –î–∞—Ç–∞:", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
    print("üéØ –¶–µ–ª—å: –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ users —Å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–º id")
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –º–∏–≥—Ä–∞—Ü–∏—è!")
    print("=" * 80)

def confirm_migration():
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º:")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤ —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è")
    print("‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏")
    print("‚úÖ –ï—Å—Ç—å –ø–ª–∞–Ω –æ—Ç–∫–∞—Ç–∞ –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º")
    
    print("\nüìã –ß—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ:")
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è id –≤ —Ç–∞–±–ª–∏—Ü—É users")
    print("3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤–æ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö")
    print("4. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏")
    print("5. –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π")
    print("6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    print("\n‚è±Ô∏è  –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 5-15 –º–∏–Ω—É—Ç")
    print("üìä –ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã: users + 10 —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü")
    
    response = input("\n‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
    return response == 'YES'

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print(f"\nüîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd="/Users/d.dubenetskiy/Documents/tg_project")
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            if result.stdout.strip():
                print(f"üìù –í—ã–≤–æ–¥: {result.stdout.strip()}")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
            print(f"üìù –û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print_banner()
    
    if not confirm_migration():
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return
    
    print("\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
    
    # –≠—Ç–∞–ø 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if not run_command("docker-compose exec app python migrations/test_migration.py", "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"):
        print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ. –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
        return
    
    # –≠—Ç–∞–ø 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
    if not run_command("docker-compose exec app python migrations/user_restructure_migration.py", "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î"):
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –ë–î –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")
        return
    
    # –≠—Ç–∞–ø 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
    if not run_command("python migrations/update_code_after_migration.py", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"):
        print("‚ö†Ô∏è  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ.")
    
    # –≠—Ç–∞–ø 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if not run_command("docker-compose restart app", "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"):
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –≤—Ä—É—á–Ω—É—é.")
    
    print("\n" + "=" * 80)
    print("üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 80)
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("2. ‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    print("3. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ–∫-–ª–∏—Å—Ç: docs/POST_MIGRATION_CHECKLIST.md")
    print("4. ‚úÖ –£–≤–µ–¥–æ–º–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è")
    print("5. ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —á–∞—Å–æ–≤")
    
    print("\nüîç –§–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print("- docs/POST_MIGRATION_CHECKLIST.md - —á–µ–∫-–ª–∏—Å—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫")
    print("- db.py.backup - —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–æ–¥–∞")
    print("- –°—Ö–µ–º–∞ backup –≤ –ë–î - —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –¥–∞–Ω–Ω—ã—Ö")
    
    print("\n‚ö†Ô∏è  –í —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º:")
    print("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–ª—è –æ—Ç–∫–∞—Ç–∞")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("- –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏")
    
    print("\nüéØ –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    main()