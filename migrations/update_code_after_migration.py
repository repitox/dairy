#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ db.py –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
"""

import sys
import os
import re

def update_db_functions():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ db.py –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ db.py...")
    
    db_file_path = "/Users/d.dubenetskiy/Documents/tg_project/db.py"
    
    try:
        with open(db_file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–º–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞
        replacements = [
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            (r'SELECT \* FROM users WHERE user_id = %s', 'SELECT * FROM users WHERE telegram_id = %s'),
            (r'INSERT INTO users \(user_id,', 'INSERT INTO users (telegram_id,'),
            (r'ON CONFLICT \(user_id\)', 'ON CONFLICT (telegram_id)'),
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JOIN-–æ–≤
            (r'JOIN users u ON u\.user_id = ', 'JOIN users u ON u.id = '),
            (r'FROM users u WHERE u\.user_id = ', 'FROM users u WHERE u.telegram_id = '),
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
            (r'VALUES \(%s, %s, %s\).*-- user_id', 'VALUES (%s, %s, %s) -- user_id —Ç–µ–ø–µ—Ä—å —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ users.id'),
        ]
        
        updated_content = content
        changes_made = 0
        
        for old_pattern, new_pattern in replacements:
            if re.search(old_pattern, updated_content):
                updated_content = re.sub(old_pattern, new_pattern, updated_content)
                changes_made += 1
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–∞—Ç—Ç–µ—Ä–Ω: {old_pattern[:50]}...")
        
        if changes_made > 0:
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            with open(f"{db_file_path}.backup", 'w', encoding='utf-8') as f:
                f.write(content)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥
            with open(db_file_path, 'w', encoding='utf-8') as f:
                f.write(updated_content)
            
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {changes_made} –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –≤ db.py")
            print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ db.py.backup")
        else:
            print("‚ÑπÔ∏è  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è db.py: {e}")
        return False

def create_new_auth_functions():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    new_functions = '''
# === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ò ===

def get_user_by_telegram_id(telegram_id: int):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID"""
    with get_conn() as conn:
        with conn.cursor() as cur:
            cur.execute("SELECT * FROM users WHERE telegram_id = %s", (telegram_id,))
            return cur.fetchone()

def get_user_by_id(user_id: int):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É ID"""
    with get_conn() as conn:
        with conn.cursor() as cur:
            cur.execute("SELECT * FROM users WHERE id = %s", (user_id,))
            return cur.fetchone()

def create_user_new(telegram_id: int, first_name: str, username: str = None):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)"""
    with get_conn() as conn:
        with conn.cursor() as cur:
            cur.execute("""
                INSERT INTO users (telegram_id, first_name, username, registered_at, theme)
                VALUES (%s, %s, %s, %s, 'light')
                ON CONFLICT (telegram_id) DO UPDATE SET
                    first_name = EXCLUDED.first_name,
                    username = EXCLUDED.username
                RETURNING id
            """, (telegram_id, first_name, username, datetime.utcnow().isoformat()))
            user_id = cur.fetchone()["id"]
            conn.commit()
            return user_id

# === –ö–û–ù–ï–¶ –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô ===
'''
    
    try:
        db_file_path = "/Users/d.dubenetskiy/Documents/tg_project/db.py"
        
        with open(db_file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
        if "# === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –ü–û–°–õ–ï –ú–ò–ì–†–ê–¶–ò–ò ===" not in content:
            updated_content = content + new_functions
            
            with open(db_file_path, 'w', encoding='utf-8') as f:
                f.write(updated_content)
            
            print("‚úÖ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        else:
            print("‚ÑπÔ∏è  –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

def create_migration_checklist():
    """–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫-–ª–∏—Å—Ç–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    checklist = '''
# üìã –ß–µ–∫-–ª–∏—Å—Ç –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

## ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:
- [ ] –§—É–Ω–∫—Ü–∏–∏ –≤ db.py –æ–±–Ω–æ–≤–ª–µ–Ω—ã
- [ ] –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
- [ ] –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è db.py —Å–æ–∑–¥–∞–Ω–∞

## üîç –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏:

### 1. –§—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:
- [ ] `register_user()` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ telegram_id
- [ ] `get_user()` - –æ–±–Ω–æ–≤–∏—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
- [ ] –í—Å–µ –º–µ—Å—Ç–∞ –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è user_id –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

### 2. API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:
- [ ] `/api/auth` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
- [ ] –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É user_id –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö

### 3. Frontend –∫–æ–¥:
- [ ] JavaScript —Ñ—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
- [ ] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ user_id –≤ localStorage/sessionStorage
- [ ] AJAX –∑–∞–ø—Ä–æ—Å—ã —Å user_id

### 4. Telegram Bot (–µ—Å–ª–∏ –µ—Å—Ç—å):
- [ ] –û–±–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

### 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- [ ] –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- [ ] –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- [ ] –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á/–ø—Ä–æ–µ–∫—Ç–æ–≤/–ø–æ–∫—É–ø–æ–∫
- [ ] –†–∞–±–æ—Ç–∞ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
- [ ] –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

## üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:
- [ ] –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
- [ ] –°–≤—è–∑–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
- [ ] –ù–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- [ ] –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ —É—Ö—É–¥—à–∏–ª–∞—Å—å

## üìù –ó–∞–º–µ—Ç–∫–∏:
- –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ deprecated
- –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç users.id –¥–ª—è —Å–≤—è–∑–µ–π
- telegram_id –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
- –í—Å–µ –≤–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ —Ç–µ–ø–µ—Ä—å —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ users.id
'''
    
    try:
        checklist_path = "/Users/d.dubenetskiy/Documents/tg_project/docs/POST_MIGRATION_CHECKLIST.md"
        
        with open(checklist_path, 'w', encoding='utf-8') as f:
            f.write(checklist)
        
        print(f"‚úÖ –ß–µ–∫-–ª–∏—Å—Ç —Å–æ–∑–¥–∞–Ω: {checklist_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫-–ª–∏—Å—Ç–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞"""
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 60)
    
    success = True
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ db.py
    if not update_db_functions():
        success = False
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    if not create_new_auth_functions():
        success = False
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫-–ª–∏—Å—Ç–∞
    if not create_migration_checklist():
        success = False
    
    if success:
        print("\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª docs/POST_MIGRATION_CHECKLIST.md")
        print("üîç –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    else:
        print("\n‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é")

if __name__ == "__main__":
    main()