#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ 'active' –≤ —Ç–∞–±–ª–∏—Ü—É projects
"""

import psycopg2
import psycopg2.extras
import os
from datetime import datetime

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ª–æ–∫–∞–ª—å–Ω–∞—è —ç—Ç–æ —Å—Ä–µ–¥–∞ –∏–ª–∏ –ø—Ä–æ–¥–∞–∫—à–Ω
    if os.path.exists('/.dockerenv'):
        # Docker —Å—Ä–µ–¥–∞ (–ª–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
        return psycopg2.connect(
            host="db",
            database="telegram_app",
            user="postgres",
            password="postgres",
            port=5432
        )
    else:
        # –ü—Ä–æ–¥–∞–∫—à–Ω —Å—Ä–µ–¥–∞ NetAngels
        return psycopg2.connect(
            host='postgres.c107597.h2',
            database='c107597_rptx_na4u_ru',
            user='c107597_rptx_na4u_ru',
            password='ZiKceXoydixol93',
            port=5432
        )

def check_column_exists(conn):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ active –≤ —Ç–∞–±–ª–∏—Ü–µ projects"""
    with conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cur:
        cur.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'projects' AND column_name = 'active'
        """)
        return cur.fetchone() is not None

def add_active_column(conn):
    """–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–æ–Ω–∫—É active –≤ —Ç–∞–±–ª–∏—Ü—É projects"""
    with conn.cursor() as cur:
        print("üîß –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É 'active' –≤ —Ç–∞–±–ª–∏—Ü—É projects...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é TRUE
        cur.execute("""
            ALTER TABLE projects 
            ADD COLUMN active BOOLEAN DEFAULT TRUE NOT NULL
        """)
        
        print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'active' –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cur.execute("""
            SELECT column_name, data_type, column_default, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'projects' AND column_name = 'active'
        """)
        result = cur.fetchone()
        if result:
            print(f"üìä –ö–æ–ª–æ–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {result[0]} ({result[1]}, default: {result[2]}, nullable: {result[3]})")
        
        conn.commit()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ 'active' –≤ —Ç–∞–±–ª–∏—Ü—É projects")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().isoformat()}")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        conn = get_db_connection()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\nüìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã projects:")
        with conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cur:
            cur.execute("""
                SELECT column_name, data_type, column_default, is_nullable
                FROM information_schema.columns 
                WHERE table_name = 'projects' 
                ORDER BY ordinal_position
            """)
            for row in cur.fetchall():
                print(f"  - {row['column_name']}: {row['data_type']} (default: {row['column_default']}, nullable: {row['is_nullable']})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è
        if check_column_exists(conn):
            print("\n‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ 'active' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        else:
            print("\nüîß –ö–æ–ª–æ–Ω–∫–∞ 'active' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
            add_active_column(conn)
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\nüìã –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã projects:")
        with conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor) as cur:
            cur.execute("""
                SELECT column_name, data_type, column_default, is_nullable
                FROM information_schema.columns 
                WHERE table_name = 'projects' 
                ORDER BY ordinal_position
            """)
            for row in cur.fetchall():
                print(f"  - {row['column_name']}: {row['data_type']} (default: {row['column_default']}, nullable: {row['is_nullable']})")
        
        conn.close()
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)