#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö blur —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏–∑ CSS —Ñ–∞–π–ª–∞
–£–±–∏—Ä–∞–µ—Ç backdrop-filter –∏ -webkit-backdrop-filter –∏–∑ –≤—Å–µ—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
"""

import os
import re

# –ü—É—Ç—å –∫ CSS —Ñ–∞–π–ª—É
CSS_FILE = "/Users/d.dubenetskiy/Documents/tg_project/dashboard/ui-components.css"

def remove_blur_effects():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ blur —ç—Ñ—Ñ–µ–∫—Ç—ã –∏–∑ CSS —Ñ–∞–π–ª–∞"""
    
    print("üîÑ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö blur —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏–∑ ui-components.css")
    print("=" * 50)
    
    if not os.path.exists(CSS_FILE):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {CSS_FILE}")
        return
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    try:
        with open(CSS_FILE, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_size = len(content)
        print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {original_size} —Å–∏–º–≤–æ–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    backup_path = CSS_FILE + '.backup-blur-removal'
    try:
        with open(backup_path, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_path}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø: {e}")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ blur —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    backdrop_count = len(re.findall(r'backdrop-filter:\s*[^;/]+;', content))
    webkit_count = len(re.findall(r'-webkit-backdrop-filter:\s*[^;/]+;', content))
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ backdrop-filter: {backdrop_count}")
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ -webkit-backdrop-filter: {webkit_count}")
    
    if backdrop_count == 0 and webkit_count == 0:
        print("‚úÖ Blur —ç—Ñ—Ñ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ backdrop-filter —ç—Ñ—Ñ–µ–∫—Ç—ã
    content = re.sub(
        r'backdrop-filter:\s*[^;]+;',
        '/* backdrop-filter removed */',
        content
    )
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ -webkit-backdrop-filter —ç—Ñ—Ñ–µ–∫—Ç—ã
    content = re.sub(
        r'-webkit-backdrop-filter:\s*[^;]+;',
        '/* -webkit-backdrop-filter removed */',
        content
    )
    
    # –£–¥–∞–ª—è–µ–º blur() —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–≤–æ–π—Å—Ç–≤
    content = re.sub(
        r'blur\([^)]+\)',
        '/* blur removed */',
        content
    )
    
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        with open(CSS_FILE, 'w', encoding='utf-8') as f:
            f.write(content)
        
        new_size = len(content)
        print(f"‚úÖ –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
        print(f"üìè –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: {new_size} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìä –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞: {new_size - original_size:+d} —Å–∏–º–≤–æ–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return
    
    print(f"\nüéâ –í—Å–µ blur —ç—Ñ—Ñ–µ–∫—Ç—ã —É–¥–∞–ª–µ–Ω—ã!")
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ backdrop-filter: {backdrop_count}")
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ -webkit-backdrop-filter: {webkit_count}")
    print(f"üíæ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {backup_path}")

def verify_removal():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ blur —ç—Ñ—Ñ–µ–∫—Ç—ã —É–¥–∞–ª–µ–Ω—ã"""
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è blur —ç—Ñ—Ñ–µ–∫—Ç–æ–≤...")
    
    try:
        with open(CSS_FILE, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è blur —ç—Ñ—Ñ–µ–∫—Ç—ã
        remaining_backdrop = re.findall(r'backdrop-filter:\s*(?!.*removed)[^;]+;', content)
        remaining_webkit = re.findall(r'-webkit-backdrop-filter:\s*(?!.*removed)[^;]+;', content)
        remaining_blur = re.findall(r'blur\([^)]+\)', content)
        
        if remaining_backdrop:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞–≤—à–∏–µ—Å—è backdrop-filter:")
            for effect in remaining_backdrop[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   ‚Ä¢ {effect}")
        
        if remaining_webkit:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞–≤—à–∏–µ—Å—è -webkit-backdrop-filter:")
            for effect in remaining_webkit[:5]:
                print(f"   ‚Ä¢ {effect}")
        
        if remaining_blur:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—Å—Ç–∞–≤—à–∏–µ—Å—è blur():")
            for effect in remaining_blur[:5]:
                print(f"   ‚Ä¢ {effect}")
        
        if not remaining_backdrop and not remaining_webkit and not remaining_blur:
            print("‚úÖ –í—Å–µ blur —ç—Ñ—Ñ–µ–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    remove_blur_effects()
    verify_removal()
    
    print(f"\nüß™ –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   üåê –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É dashboard")
    print(f"   üñ±Ô∏è –ù–∞–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏")
    print(f"   üëÄ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ blur —ç—Ñ—Ñ–µ–∫—Ç–æ–≤")

if __name__ == "__main__":
    main()