"""
Webhook –¥–ª—è Telegram
"""
import json
from datetime import datetime
from fastapi import Request
from telegram import Update

from app.core.config import settings


def setup_webhook(app, telegram_app):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram"""
    
    @app.post(settings.WEBHOOK_PATH)
    async def telegram_webhook(req: Request):
        try:
            data = await req.json()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ webhook –≤ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            with open("/tmp/webhook_debug.log", "a") as f:
                f.write(f"=== {datetime.utcnow().isoformat()} ===\n")
                f.write(json.dumps(data, indent=2, ensure_ascii=False) + "\n\n")
            
            print("üì© Webhook –ø–æ–ª—É—á–µ–Ω:", data.get("message", {}).get("text", data))
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            if "message" in data and "from" in data["message"]:
                user = data["message"]["from"]
                print(f"üë§ –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ID={user['id']}, username={user.get('username', 'None')}")
            
            update = Update.de_json(data, telegram_app.bot)
            print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º update: {update.update_id}")
            
            await telegram_app.process_update(update)
            print("‚úÖ Update –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            
            return {"status": "ok"}
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ webhook: {e}")
            import traceback
            traceback.print_exc()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Ñ–∞–π–ª
            with open("/tmp/webhook_debug.log", "a") as f:
                f.write(f"ERROR {datetime.utcnow().isoformat()}: {e}\n")
                f.write(traceback.format_exc() + "\n\n")
                
            return {"status": "error", "message": str(e)}
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    @app.get("/webhook-info")
    async def webhook_info():
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook"""
        return {
            "webhook_url": settings.WEBHOOK_URL,
            "webhook_path": settings.WEBHOOK_PATH,
            "domain": settings.DOMAIN,
            "token_set": bool(settings.BOT_TOKEN)
        }

    @app.get("/webhook-debug")
    async def webhook_debug():
        """–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ webhook –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
        try:
            with open("/tmp/webhook_debug.log", "r") as f:
                logs = f.read()
            return {"logs": logs}
        except FileNotFoundError:
            return {"logs": "–õ–æ–≥-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}