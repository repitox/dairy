#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ "–õ–∏—á–Ω–æ–µ" –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

from db import get_conn, get_user_personal_project_id
from datetime import datetime

def migrate_personal_projects():
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç "–õ–∏—á–Ω–æ–µ" –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ–≥–æ –Ω–µ—Ç
    """
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ª–∏—á–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤...")
    
    with get_conn() as conn:
        with conn.cursor() as cur:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –ø–æ–ª–µ–π)
            cur.execute("SELECT user_id, first_name FROM users ORDER BY user_id")
            users = cur.fetchall()
            
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            
            created_count = 0
            existing_count = 0
            
            for user in users:
                telegram_id = user['user_id']  # —ç—Ç–æ telegram_id –≤ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
                first_name = user['first_name']
                
                # –ü–æ–ª—É—á–∞–µ–º internal_id —á–µ—Ä–µ–∑ resolve_user_id
                from db import resolve_user_id
                internal_id = resolve_user_id(telegram_id)
                if not internal_id:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ internal_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {first_name} (telegram_id: {telegram_id})")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ª–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
                personal_project_id = get_user_personal_project_id(internal_id)
                
                if personal_project_id:
                    print(f"‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {first_name} (internal_id: {internal_id}) —É–∂–µ –µ—Å—Ç—å –ª–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç (ID: {personal_project_id})")
                    existing_count += 1
                    continue
                
                # –°–æ–∑–¥–∞–µ–º –ª–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
                try:
                    cur.execute("""
                        INSERT INTO projects (name, owner_id, color, created_at, active)
                        VALUES ('–õ–∏—á–Ω–æ–µ', %s, '#6366f1', %s, TRUE)
                        RETURNING id;
                    """, (internal_id, datetime.utcnow().isoformat()))
                    
                    project_result = cur.fetchone()
                    personal_project_id = project_result['id']
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–≤–æ–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                    cur.execute("""
                        INSERT INTO project_members (project_id, user_id, joined_at)
                        VALUES (%s, %s, %s)
                        ON CONFLICT (project_id, user_id) DO NOTHING;
                    """, (personal_project_id, internal_id, datetime.utcnow().isoformat()))
                    
                    conn.commit()
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ª–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è {first_name} (internal_id: {internal_id}) -> –ø—Ä–æ–µ–∫—Ç ID: {personal_project_id}")
                    created_count += 1
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è {first_name} (internal_id: {internal_id}): {e}")
                    conn.rollback()
            
            print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏:")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: {created_count}")
            print(f"‚ÑπÔ∏è  –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {existing_count}")
            print(f"üìà –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            cur.execute("""
                SELECT COUNT(*) as total_users,
                       COUNT(p.id) as users_with_personal_projects
                FROM users u
                LEFT JOIN projects p ON u.id = p.owner_id AND p.name = '–õ–∏—á–Ω–æ–µ' AND p.active = TRUE
            """)
            result = cur.fetchone()
            
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞:")
            print(f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {result['total_users']}")
            print(f"–° –ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏: {result['users_with_personal_projects']}")
            
            if result['total_users'] == result['users_with_personal_projects']:
                print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –£ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ª–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.")
            else:
                print("‚ö†Ô∏è  –ù–µ —É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ª–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")

if __name__ == "__main__":
    migrate_personal_projects()