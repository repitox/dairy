#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è CSS —Ñ–∞–π–ª–æ–≤ –≤ –µ–¥–∏–Ω—ã–π ui-components.css
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Å—Ç–∏–ª–∏ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
"""

import os
import re
from datetime import datetime
from typing import Dict, List

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DASHBOARD_DIR = "/Users/d.dubenetskiy/Documents/tg_project/dashboard"

# –§–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞)
CSS_FILES_TO_MERGE = [
    'dashboard-styles.css',      # –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –±–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)
    'navigation-api-simple.css', # –°—Ç–∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    'unified-page-styles.css'    # –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
]

# HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
HTML_PAGES = [
    'main.html', 'tasks.html', 'meetings.html', 'projects.html',
    'shopping.html', 'notes.html', 'settings.html', 'ui-kit.html'
]

def read_css_file(file_path: str) -> str:
    """–ß–∏—Ç–∞–µ—Ç CSS —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"""
    
    if not os.path.exists(file_path):
        print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return ""
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        return content
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {file_path}: {e}")
        return ""

def remove_duplicate_classes(content: str, existing_classes: set) -> tuple:
    """–£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è CSS –∫–ª–∞—Å—Å—ã"""
    
    lines = content.split('\n')
    filtered_lines = []
    current_class = None
    skip_block = False
    new_classes = set()
    
    for line in lines:
        # –ò—â–µ–º –Ω–∞—á–∞–ª–æ CSS –∫–ª–∞—Å—Å–∞
        class_match = re.match(r'^\s*\.([a-zA-Z][a-zA-Z0-9_-]*)\s*\{', line)
        
        if class_match:
            current_class = class_match.group(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–ª–∞—Å—Å
            if current_class in existing_classes:
                skip_block = True
                print(f"   üîÑ –ü—Ä–æ–ø—É—â–µ–Ω –¥—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è –∫–ª–∞—Å—Å: .{current_class}")
                continue
            else:
                new_classes.add(current_class)
                skip_block = False
        
        # –ò—â–µ–º –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞
        if skip_block and line.strip() == '}':
            skip_block = False
            continue
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±–ª–æ–∫
        if not skip_block:
            filtered_lines.append(line)
    
    return '\n'.join(filtered_lines), new_classes

def clean_css_content(content: str, file_name: str) -> str:
    """–û—á–∏—â–∞–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç CSS –∫–æ–Ω—Ç–µ–Ω—Ç"""
    
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)
    
    # –£–±–∏—Ä–∞–µ–º blur —ç—Ñ—Ñ–µ–∫—Ç—ã –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    content = re.sub(r'backdrop-filter:[^;]+;', '/* backdrop-filter removed */', content)
    content = re.sub(r'-webkit-backdrop-filter:[^;]+;', '/* -webkit-backdrop-filter removed */', content)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
    section_headers = {
        'dashboard-styles.css': '/* ===== DASHBOARD BASE STYLES ===== */',
        'navigation-api-simple.css': '/* ===== NAVIGATION STYLES ===== */',
        'unified-page-styles.css': '/* ===== UNIFIED PAGE STYLES ===== */'
    }
    
    header = section_headers.get(file_name, f'/* ===== {file_name.upper()} ===== */')
    
    return f"\n\n{header}\n\n{content}"

def merge_css_files() -> str:
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ CSS —Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω"""
    
    print("üîÑ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ CSS —Ñ–∞–π–ª–æ–≤...")
    
    # –ß–∏—Ç–∞–µ–º –±–∞–∑–æ–≤—ã–π ui-components.css
    ui_kit_path = os.path.join(DASHBOARD_DIR, 'ui-components.css')
    merged_content = read_css_file(ui_kit_path)
    
    if not merged_content:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å ui-components.css")
        return ""
    
    print(f"‚úÖ –ë–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª ui-components.css –∑–∞–≥—Ä—É–∂–µ–Ω ({len(merged_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∞—Å—Å—ã –∏–∑ ui-components.css
    existing_classes = set(re.findall(r'\.([a-zA-Z][a-zA-Z0-9_-]*)\s*\{', merged_content))
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª–∞—Å—Å–æ–≤ –≤ ui-components.css: {len(existing_classes)}")
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    total_added = 0
    
    for file_name in CSS_FILES_TO_MERGE:
        file_path = os.path.join(DASHBOARD_DIR, file_name)
        content = read_css_file(file_path)
        
        if content:
            print(f"\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {file_name}...")
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª–∞—Å—Å—ã
            cleaned_content, new_classes = remove_duplicate_classes(content, existing_classes)
            
            if new_classes:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
                formatted_content = clean_css_content(cleaned_content, file_name)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫ –æ–±—â–µ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
                merged_content += formatted_content
                existing_classes.update(new_classes)
                total_added += len(new_classes)
                
                print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–ª–∞—Å—Å–æ–≤: {len(new_classes)}")
            else:
                print(f"   ‚ö†Ô∏è –í—Å–µ –∫–ª–∞—Å—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, —Ñ–∞–π–ª –ø—Ä–æ–ø—É—â–µ–Ω")
    
    print(f"\nüìä –ò—Ç–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö –∫–ª–∞—Å—Å–æ–≤: {total_added}")
    print(f"üìè –†–∞–∑–º–µ—Ä –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {len(merged_content)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    return merged_content

def update_html_pages():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã - —É–±–∏—Ä–∞–µ—Ç –ª–∏—à–Ω–∏–µ CSS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    
    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü...")
    
    updated_count = 0
    
    for page_name in HTML_PAGES:
        page_path = os.path.join(DASHBOARD_DIR, page_name)
        
        if not os.path.exists(page_path):
            print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {page_name}")
            continue
        
        try:
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(page_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
            backup_path = page_path + '.backup-css-merge'
            with open(backup_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ CSS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            original_content = content
            
            # –£–±–∏—Ä–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ–±—ä–µ–¥–∏–Ω–∏–ª–∏
            content = re.sub(r'<link rel="stylesheet" href="dashboard-styles\.css">\s*', '', content)
            content = re.sub(r'<link rel="stylesheet" href="navigation-api-simple\.css">\s*', '', content)
            content = re.sub(r'<link rel="stylesheet" href="unified-page-styles\.css">\s*', '', content)
            
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
            content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            if content != original_content:
                with open(page_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {page_name}")
                updated_count += 1
            else:
                print(f"   ‚ö™ –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {page_name}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {page_name}: {e}")
    
    print(f"\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–æ HTML —Å—Ç—Ä–∞–Ω–∏—Ü: {updated_count}/{len(HTML_PAGES)}")

def create_backup_and_save(merged_content: str):
    """–°–æ–∑–¥–∞–µ—Ç –±—ç–∫–∞–ø –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π ui-components.css"""
    
    ui_kit_path = os.path.join(DASHBOARD_DIR, 'ui-components.css')
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ ui-components.css
    backup_path = ui_kit_path + '.backup-before-merge'
    
    try:
        with open(ui_kit_path, 'r', encoding='utf-8') as f:
            original_content = f.read()
        
        with open(backup_path, 'w', encoding='utf-8') as f:
            f.write(original_content)
        
        print(f"üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: ui-components.css.backup-before-merge")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        header = f"""/* ===== UNIFIED UI COMPONENTS CSS ===== */
/*
 * –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π CSS —Ñ–∞–π–ª –¥–ª—è Dashboard
 * –°–æ–∑–¥–∞–Ω: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
 * 
 * –í–∫–ª—é—á–∞–µ—Ç —Å—Ç–∏–ª–∏ –∏–∑:
 * - ui-components.css (–±–∞–∑–æ–≤—ã–π UI –∫–∏—Ç)
 * - dashboard-styles.css (–æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏)
 * - navigation-api-simple.css (–Ω–∞–≤–∏–≥–∞—Ü–∏—è)
 * - unified-page-styles.css (—É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
 */

"""
        
        final_content = header + merged_content
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        with open(ui_kit_path, 'w', encoding='utf-8') as f:
            f.write(final_content)
        
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π ui-components.css ({len(final_content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üé® –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ CSS —Ñ–∞–π–ª–æ–≤ –≤ –µ–¥–∏–Ω—ã–π UI –∫–∏—Ç")
    print("=" * 50)
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º CSS —Ñ–∞–π–ª—ã
    merged_content = merge_css_files()
    
    if not merged_content:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å CSS —Ñ–∞–π–ª—ã")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    if not create_backup_and_save(merged_content):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    update_html_pages()
    
    print(f"\nüéâ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ CSS –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   üìÅ –ë—ã–ª–æ: 4 CSS —Ñ–∞–π–ª–∞")
    print(f"   üìÅ –°—Ç–∞–ª–æ: 1 CSS —Ñ–∞–π–ª (ui-components.css)")
    print(f"   üìä HTML —Å—Ç—Ä–∞–Ω–∏—Ü –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
    print(f"   üíæ –°–æ–∑–¥–∞–Ω—ã –±—ç–∫–∞–ø—ã –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤")
    
    print(f"\nüß™ –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   üåê –û—Ç–∫—Ä–æ–π—Ç–µ –ª—é–±—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É dashboard")
    print(f"   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å—Ç–∏–ª–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print(f"   üì± –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é")
    
    print(f"\nüìÅ –§–∞–π–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏):")
    for file_name in CSS_FILES_TO_MERGE:
        print(f"   üóëÔ∏è {file_name}")

if __name__ == "__main__":
    main()