#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã purchases –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ NetAngels
–ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: python3 fix_production_purchases.py
"""

from db import get_conn

def check_and_fix_purchases_table():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É purchases"""
    try:
        with get_conn() as conn:
            with conn.cursor() as cur:
                print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
                
                # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
                cur.execute("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_name;")
                tables = [row[0] for row in cur.fetchall()]
                print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {tables}")
                
                # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ purchases
                purchases_exists = 'purchases' in tables
                shopping_items_exists = 'shopping_items' in tables
                
                print(f"üìä –¢–∞–±–ª–∏—Ü–∞ purchases: {'‚úÖ –µ—Å—Ç—å' if purchases_exists else '‚ùå –Ω–µ—Ç'}")
                print(f"üìä –¢–∞–±–ª–∏—Ü–∞ shopping_items: {'‚úÖ –µ—Å—Ç—å' if shopping_items_exists else '‚ùå –Ω–µ—Ç'}")
                
                # 3. –ï—Å–ª–∏ purchases –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –µ—Å—Ç—å shopping_items - –≤–æ–∑–º–æ–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                if not purchases_exists and shopping_items_exists:
                    print("üîÑ –í–æ–∑–º–æ–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ shopping_items –≤–º–µ—Å—Ç–æ purchases")
                    cur.execute("SELECT column_name FROM information_schema.columns WHERE table_name = 'shopping_items' ORDER BY ordinal_position;")
                    columns = [row[0] for row in cur.fetchall()]
                    print(f"üìã –ü–æ–ª—è shopping_items: {columns}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
                    has_shopping_list_id = 'shopping_list_id' in columns
                    has_url = 'url' in columns
                    has_comment = 'comment' in columns
                    
                    print(f"üîç shopping_list_id: {'‚úÖ' if has_shopping_list_id else '‚ùå'}")
                    print(f"üîç url: {'‚úÖ' if has_url else '‚ùå'}")
                    print(f"üîç comment: {'‚úÖ' if has_comment else '‚ùå'}")
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
                    if not has_shopping_list_id:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ shopping_list_id...")
                        cur.execute("ALTER TABLE shopping_items ADD COLUMN shopping_list_id INTEGER;")
                    
                    if not has_url:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ url...")
                        cur.execute("ALTER TABLE shopping_items ADD COLUMN url TEXT;")
                    
                    if not has_comment:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ comment...")
                        cur.execute("ALTER TABLE shopping_items ADD COLUMN comment TEXT;")
                    
                    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
                    print("üìù –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_shopping_items_shopping_list_id ON shopping_items(shopping_list_id);")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_shopping_items_user_id ON shopping_items(user_id);")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_shopping_items_completed ON shopping_items(completed);")
                    
                    conn.commit()
                    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ shopping_items –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                
                # 4. –ï—Å–ª–∏ purchases —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                elif purchases_exists:
                    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã purchases...")
                    cur.execute("SELECT column_name FROM information_schema.columns WHERE table_name = 'purchases' ORDER BY ordinal_position;")
                    columns = [row[0] for row in cur.fetchall()]
                    print(f"üìã –ü–æ–ª—è purchases: {columns}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                    cur.execute("SELECT EXISTS (SELECT 1 FROM pg_sequences WHERE sequencename = 'purchases_id_seq');")
                    seq_exists = cur.fetchone()[0]
                    print(f"üî¢ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å purchases_id_seq: {'‚úÖ' if seq_exists else '‚ùå'}")
                    
                    if not seq_exists:
                        print("‚ûï –°–æ–∑–¥–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å...")
                        cur.execute("CREATE SEQUENCE purchases_id_seq;")
                        cur.execute("SELECT COALESCE(MAX(id), 0) + 1 FROM purchases;")
                        next_val = cur.fetchone()[0]
                        cur.execute(f"SELECT setval('purchases_id_seq', {next_val}, false);")
                        cur.execute("ALTER TABLE purchases ALTER COLUMN id SET DEFAULT nextval('purchases_id_seq');")
                        cur.execute("ALTER SEQUENCE purchases_id_seq OWNED BY purchases.id;")
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
                    has_shopping_list_id = 'shopping_list_id' in columns
                    has_url = 'url' in columns
                    has_comment = 'comment' in columns
                    
                    if not has_shopping_list_id:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ shopping_list_id...")
                        cur.execute("ALTER TABLE purchases ADD COLUMN shopping_list_id INTEGER;")
                    
                    if not has_url:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ url...")
                        cur.execute("ALTER TABLE purchases ADD COLUMN url TEXT;")
                    
                    if not has_comment:
                        print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ comment...")
                        cur.execute("ALTER TABLE purchases ADD COLUMN comment TEXT;")
                    
                    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
                    print("üìù –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_purchases_shopping_list_id ON purchases(shopping_list_id);")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_purchases_user_id ON purchases(user_id);")
                    cur.execute("CREATE INDEX IF NOT EXISTS idx_purchases_completed ON purchases(completed);")
                    
                    conn.commit()
                    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ purchases –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                
                # 5. –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º purchases
                else:
                    print("üÜï –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É purchases...")
                    cur.execute("""
                        CREATE TABLE purchases (
                            id SERIAL PRIMARY KEY,
                            user_id INTEGER NOT NULL REFERENCES users(id),
                            project_id INTEGER REFERENCES projects(id),
                            name TEXT NOT NULL,
                            quantity INTEGER NOT NULL DEFAULT 1,
                            price DECIMAL(10,2),
                            category TEXT DEFAULT 'other',
                            completed BOOLEAN DEFAULT FALSE,
                            created_at TEXT,
                            shopping_list_id INTEGER,
                            url TEXT,
                            comment TEXT
                        );
                    """)
                    
                    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
                    cur.execute("CREATE INDEX idx_purchases_user_id ON purchases(user_id);")
                    cur.execute("CREATE INDEX idx_purchases_shopping_list_id ON purchases(shopping_list_id);")
                    cur.execute("CREATE INDEX idx_purchases_completed ON purchases(completed);")
                    
                    conn.commit()
                    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ purchases —Å–æ–∑–¥–∞–Ω–∞!")
                
                # 6. –û—Ç–º–µ—á–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
                print("üìù –û—Ç–º–µ—á–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é...")
                cur.execute("""
                    INSERT INTO migrations (version, name, executed_at) 
                    VALUES (%s, %s, NOW()) 
                    ON CONFLICT (version) DO NOTHING;
                """, ('20250127_000001', 'fix_purchases_table'))
                conn.commit()
                
                print("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                
                # 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:")
                cur.execute("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name IN ('purchases', 'shopping_items') ORDER BY table_name;")
                final_tables = [row[0] for row in cur.fetchall()]
                for table in final_tables:
                    cur.execute(f"SELECT column_name FROM information_schema.columns WHERE table_name = '{table}' ORDER BY ordinal_position;")
                    columns = [row[0] for row in cur.fetchall()]
                    print(f"  üìã {table}: {columns}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_and_fix_purchases_table()